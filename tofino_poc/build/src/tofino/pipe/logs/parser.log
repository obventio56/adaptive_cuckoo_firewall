ingress::TofinoIngressParser_parse_port_metadata is split into 2 states:
  ingress::TofinoIngressParser_parse_port_metadata
  ingress::TofinoIngressParser_parse_port_metadata.$split_0
allocated { $byte1 } to {  [ ingress::start : inbuf bit[0] ig_intr_md.resubmit_flag; ] }
allocated { $half } to {  [ ingress::TofinoIngressParser_parse_port_metadata.$split_0 : inbuf bit[32..47] hdr.ethernet/ethernet.ether_type; ] }
allocated { $byte1 } to {  [ ingress::parse_ipv4 : inbuf bit[72..79] hdr.ipv4/ipv4.protocol; ] }
ComputeLoweredParserIR preorder on Header : header ingress_intrinsic_metadata_t @__intrinsic_metadata {
  @__intrinsic_metadata bit<1> resubmit_flag;
  @padding @__intrinsic_metadata bit<1> _pad1;
  @__intrinsic_metadata bit<2> packet_version;
  @padding @__intrinsic_metadata bit<3> _pad2;
  @__intrinsic_metadata bit<9> ingress_port;
  @__intrinsic_metadata bit<48> ingress_mac_tstamp; }
ComputeLoweredParserIR preorder on Header : header ethernet_h {
  bit<48> dst_addr;
  bit<48> src_addr;
  bit<16> ether_type; }
ComputeLoweredParserIR preorder on Header : header ipv4_h {
  bit<4> version;
  bit<4> ihl;
  bit<8> diffserv;
  bit<16> total_len;
  bit<16> identification;
  bit<3> flags;
  bit<13> frag_offset;
  bit<8> ttl;
  bit<8> protocol;
  bit<16> hdr_checksum;
  bit<32> src_addr;
  bit<32> dst_addr; }
ComputeLoweredParserIR preorder on Header : header icmp_h {
  bit<8> type_;
  bit<8> code;
  bit<16> hdr_checksum; }
ComputeLoweredParserIR preorder on Header : header tcp_h {
  bit<16> src_port;
  bit<16> dst_port;
  bit<32> seq_no;
  bit<32> ack_no;
  bit<4> data_offset;
  bit<4> res;
  bit<8> flags;
  bit<16> window;
  bit<16> checksum;
  bit<16> urgent_ptr; }
